# Check that we can read files in the ACI
spawn /bin/sh -c "export FILE=/dir1/file ; ../bin/rkt --debug --insecure-skip-verify run --inherit-env=true ./rkt-inspect-read-file.aci"
expect "<<<dir1>>>"
expect eof

# Check that we can read files from a volume (both ro and rw)
spawn /bin/sh -c {export FILE=/dir1/file ; ../bin/rkt --debug --insecure-skip-verify run --inherit-env=true --volume=dir1,kind=host,source=$TMPDIR ./rkt-inspect-vol-rw-read-file.aci}
expect "<<<host>>>"
expect eof
spawn /bin/sh -c {export FILE=/dir1/file ; ../bin/rkt --debug --insecure-skip-verify run --inherit-env=true --volume=dir1,kind=host,source=$TMPDIR ./rkt-inspect-vol-ro-read-file.aci}
expect "<<<host>>>"
expect eof

# Check that we can write to files in the ACI
spawn /bin/sh -c "export FILE=/dir1/file CONTENT=1 ; ../bin/rkt --debug --insecure-skip-verify run --inherit-env=true ./rkt-inspect-write-file.aci"
expect "<<<1>>>"
expect eof

# Check that we can write files to a volume (both ro and rw)
spawn /bin/sh -c {export FILE=/dir1/file CONTENT=2 ; ../bin/rkt --debug --insecure-skip-verify run --inherit-env=true --volume=dir1,kind=host,source=$TMPDIR ./rkt-inspect-vol-rw-write-file.aci}
expect "<<<2>>>"
expect eof
spawn /bin/sh -c {export FILE=/dir1/file CONTENT=3 ; ../bin/rkt --debug --insecure-skip-verify run --inherit-env=true --volume=dir1,kind=host,source=$TMPDIR ./rkt-inspect-vol-ro-write-file.aci}
expect {Cannot write to file "/dir1/file": open /dir1/file: read-only file system}
expect eof

# Check that the volume still contain the file previously written
spawn /bin/sh -c {export FILE=/dir1/file ; ../bin/rkt --debug --insecure-skip-verify run --inherit-env=true --volume=dir1,kind=host,source=$TMPDIR ./rkt-inspect-vol-ro-read-file.aci}
expect "<<<2>>>"
expect eof
